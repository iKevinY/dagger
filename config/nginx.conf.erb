daemon off;
#Heroku dynos have at least 4 cores.
worker_processes <%= ENV['NGINX_WORKERS'] || 4 %>;

events {
	use epoll;
	accept_mutex on;
	worker_connections 1024;
}

http {
	gzip on;
	gzip_comp_level 2;
	gzip_min_length 512;

	server_tokens off;

	log_format l2met 'measure#nginx.service=$request_time request_id=$http_x_request_id';
	access_log logs/nginx/access.log l2met;
	error_log logs/nginx/error.log;

	include mime.types;
	default_type application/octet-stream;
	sendfile on;

	# Must read the body in 5 seconds.
	client_body_timeout <%= ENV['NGINX_CLIENT_BODY_TIMEOUT'] || 5 %>;

	upstream app_server {
		server unix:/tmp/nginx.socket fail_timeout=0;
	}

	# https://serverfault.com/a/854600
	geo $dollar {
		default "$";
	}

	server {
		listen <%= ENV["PORT"] %>;
		server_name dagger;
		keepalive_timeout 5;
		root frontend/build/;
		index index.html;

		location ^~ /api/ {
			# https://serverfault.com/a/542038
			port_in_redirect off;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_pass http://app_server;
		}

		location = /robots.txt {
			add_header Content-Type text/plain;
			return 200 <%= ENV['DEPLOY_ENV'] == 'production' ? '"User-agent: *\nAllow: /$dollar\nDisallow: /\n"' : '"User-agent: *\nDisallow: /\n"' %>;
		}

		location / {
		    try_files $uri /index.html;
		}
	}
}
